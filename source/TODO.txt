
v branch create <nom>
v branch list
v branch switch <nom>
v branch graph
branch merge <nom 1> <nom 2> 
branch backward <nb steps>
branch forward <nb steps>
-> Si plusieurs bifurcations pour le moment c'est via les noms de commits
-> Si plusieurs, on print la liste des clés des commits et on invite à faire
-> cat_commit pour choisir

/!\ Quand on change de branch, par sécurité on clean to_be_commited

ignore avec REGEX
branch create, crée tous les arbres nécessaires
	et définit une nouvelle tete au même endroit que la HEAD
branch list
branch switch
J'ai besoin d'un fichier files, où pour chaque fichiers j'ai la liste des branchs qui l'utilisent
si plus aucune branch, alors on peut suppr (si mineur) si majeur on laisse le nom de la branche
branch restore to "commit..."
et donc branch back 3 par exemple

Il faut la fonction qui print l'état des choses
à l'époque d'un certains commits
mais en fait n commits avant sur l'actuel branch

et donc pour le merge, je remonte 2 copies

pour le branch make back 5
on fait une copie (avec un arbre nommé branch:back:%s
et on store tous les files (les clés seront dans l'arbre)

pour le merge, on remonte jusqu'à trouver le pt commun (donc on a à remonter qu'une seule branche ? si possible la plus courte
donc lister les pt communs entre les branches

Le fichier "keys_stored" associe à une clé (seul moyen d'identifier vrmt un fichier)
la liste des branches qui l'utilisent. 
Créer une branche : copie l'arbre actuel et dans le fichier "keys_stored" rajoute la branche
la commande crée par défaut une branche sur place (pour le moment identique)

On peut branch -backward ou -forward
Sachant que si la branche "main" actuelle sera automatiquement toujours forward

Si on backward, puis commit, cela crée une nouvelle bifurcation, 
mais le backward ne crée pas de branche 




Option :
refaire le cat_commit
ignore






init
add
commit
push
pop
status
restore
rootpath
-> ls-tree stylé

Je veux des merges propre,
On sauvegarde juste les différences, du genre
à partir de ligne 45 jusqu'à 55
avant :
après :

faire un gestionnaire d'historique
avec une commande pour print les différences

Si diff de plus de la moitié, on sauvegarde entièrement la nouvelle version

    CHOIX : SI ON EST EN MODE REAL ON DEPLACE TOUT LE SOUS-DOSSIER
    ET ON DEPLACE DANS L'ARBRE CE QUI Y APPARTIENT (EN GROS MV + MV TREE)
    EN REVANCHE SI NOT_REAL ALORS QUE MV_TREE ET DANS CE CAS ON BOUGE
    QUE CE QU'ON LIT DANS LE TREE.
